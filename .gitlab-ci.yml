services:
  - postgres:12.2-alpine

test:
  image: hexpm/elixir:1.13.3-erlang-24.2.1-alpine-3.15.0
  only:
    - master
  variables:
    MIX_ENV: "test"
    POSTGRES_DB: shuttertop_test
    POSTGRES_USERNAME: postgres
    POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    POSTGRES_HOST: postgres
    min_android_version: "2"
    min_ios_version: "1"
  before_script:
    - apk add --no-cache build-base git python3 curl
    - wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
    - wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.33-r0/glibc-2.33-r0.apk
    - apk add glibc-2.33-r0.apk
    - mix do local.hex --force, local.rebar --force
    - mix deps.get --only test
    - mix ci.test
  script:
    - echo "test"

deploy:
  image: docker:19-git #docker:latest
  stage: deploy
  only:
    - master
  services:
    - docker:19-dind
  when: manual
  environment: production
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  before_script:
    - DEBIAN_FRONTEND=noninteractive apk update
    - "which ssh-agent || ( apk update && apk add openssh-client )"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - apk add --no-cache gnupg build-base ca-certificates openssl py3-pip py3-cryptography sshpass ansible git python3 python3-dev libffi-dev curl postgresql-client rsync
    - pip3 install docker
    - echo "git checkout master"
    - git checkout master
    - docker images
    - cd $CI_PROJECT_DIR && git reset --hard && git clean -dfx
  script:
    - echo "$VAULT_PASS" | base64 -d > $CI_PROJECT_DIR/.ansible/.vault_pass.txt
    - echo "ansible build"
    - chmod 755 .ansible
    - cd .ansible && ansible-playbook --extra-vars="local_build_dir=\"$CI_PROJECT_DIR\"" -i apps/build/inventory-ci apps/build/update-docker-image.yml
    - cd $CI_PROJECT_DIR
    - echo "ansible deploy"
    - cd .ansible && ansible-playbook --extra-vars="local_build_dir=\"$CI_PROJECT_DIR\"" -i apps/production/inventory-ci apps/production/deploy.yml
    - echo "FINISH!!!"
